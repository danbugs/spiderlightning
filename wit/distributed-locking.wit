/// a distruted locking interface
resource lockd {
	/// open a lockd object
	static open: func(name: string) -> expected<lockd, error>

	/// creates a lock with a name, returns the lock key
	lock: func(lock-name: list<u8>) -> expected<list<u8>, error>

	/// creates a lock with a lease id, hence giving the lock a TTL
	lock-with-time-to-live: func(lock-name: list<u8>, time-to-live-in-secs: s64) -> expected<list<u8>, error>

	/// unlock a lock given a lock key
	unlock: func(lock-key: list<u8>) -> expected<unit, error>
}

// common lockd errors
variant lockd-error {
	lock-acquire-error(string),
	lock-release-error(string),
	lock-timeout-error(string),
	connection-error(string),
	protocol-error(string),
	invalid-lock-id(string),
	unexpected-error(string)
}